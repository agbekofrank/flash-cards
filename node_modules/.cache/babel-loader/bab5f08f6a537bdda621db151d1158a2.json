{"ast":null,"code":"import _slicedToArray from\"/home/agbeko/Documents/AMALITECH TRAINING/MERN STACK/PROJECTS/react/flashcards-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{v4 as uuidv4}from\"uuid\";import ROUTES from\"../app/routes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function NewQuizForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cards=_useState4[0],setCards=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),topicId=_useState6[0],setTopicId=_useState6[1];var history=useHistory();var topics={};var handleSubmit=function handleSubmit(e){e.preventDefault();if(name.length===0){return;}var cardIds=[];// create the new cards here and add each card's id to cardIds\n// create the new quiz here\nhistory.push(ROUTES.quizzesRoute());};var addCardInputs=function addCardInputs(e){e.preventDefault();setCards(cards.concat({front:\"\",back:\"\"}));};var removeCard=function removeCard(e,index){e.preventDefault();setCards(cards.filter(function(card,i){return index!==i;}));};var updateCardState=function updateCardState(index,side,value){var newCards=cards.slice();newCards[index][side]=value;setCards(newCards);};return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create a new quiz\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"quiz-name\",value:name,onChange:function onChange(e){return setName(e.currentTarget.value);},placeholder:\"Quiz Title\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"quiz-topic\",onChange:function onChange(e){return setTopicId(e.currentTarget.value);},placeholder:\"Topic\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Topic\"}),Object.values(topics).map(function(topic){return/*#__PURE__*/_jsx(\"option\",{value:topic.id,children:topic.name},topic.id);})]}),cards.map(function(card,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"card-front-back\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"card-front-\".concat(index),value:cards[index].front,onChange:function onChange(e){return updateCardState(index,\"front\",e.currentTarget.value);},placeholder:\"Front\"}),/*#__PURE__*/_jsx(\"input\",{id:\"card-back-\".concat(index),value:cards[index].back,onChange:function onChange(e){return updateCardState(index,\"back\",e.currentTarget.value);},placeholder:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return removeCard(e,index);},className:\"remove-card-button\",children:\"Remove Card\"})]},index);}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:addCardInputs,children:\"Add a Card\"}),/*#__PURE__*/_jsx(\"button\",{children:\"Create Quiz\"})]})]})]});}","map":{"version":3,"sources":["/home/agbeko/Documents/AMALITECH TRAINING/MERN STACK/PROJECTS/react/flashcards-starter/src/components/NewQuizForm.js"],"names":["React","useState","useHistory","v4","uuidv4","ROUTES","NewQuizForm","name","setName","cards","setCards","topicId","setTopicId","history","topics","handleSubmit","e","preventDefault","length","cardIds","push","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","card","i","updateCardState","side","value","newCards","slice","currentTarget","Object","values","map","topic","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = {};\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}