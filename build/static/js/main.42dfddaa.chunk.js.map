{"version":3,"sources":["app/routes.js","components/NewQuizForm.js","data/icons.js","components/NewTopicForm.js","features/topics/Topics.js","features/topics/Topic.js","features/cards/Card.js","features/quizzes/Quiz.js","features/quizzes/Quizzes.js","app/App.js","app/store.js","index.js"],"names":["ROUTES","newQuizRoute","quizRoute","id","quizzesRoute","newTopicRoute","topicRoute","topicsRoute","NewQuizForm","useState","name","setName","cards","setCards","setTopicId","history","useHistory","updateCardState","index","side","value","newCards","slice","onSubmit","e","preventDefault","length","push","onChange","currentTarget","placeholder","Object","values","map","topic","card","className","front","back","onClick","filter","i","removeCard","concat","ALL_ICONS","url","NewTopicForm","setIcon","type","required","defaultValue","disabled","hidden","Topics","to","src","icon","alt","quizIds","Topic","quizzes","useParams","topicId","quizzesForTopic","quizId","quiz","Card","flipped","setFlipped","cardIds","Quizzes","App","activeClassName","path","TopicsRoutes","QuizRoutes","match","useRouteMatch","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.42dfddaa.chunk.js","sourcesContent":["const ROUTES = {\n  newQuizRoute: () => \"/quizzes/new\",\n  quizRoute: (id) => `/quizzes/${id}`,\n  quizzesRoute: () => \"/quizzes\",\n  newTopicRoute: () => \"/topics/new\",\n  topicRoute: (id) => `/topics/${id}`,\n  topicsRoute: () => \"/topics\",\n};\n\nexport default ROUTES;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = {};\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export const BOOK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/book.svg\";\nexport const BALLOON_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/balloon.svg\";\nexport const BIRD_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/bird.svg\";\nexport const CALENDAR_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/calendar.svg\";\nexport const CLOVER_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/clover.svg\";\nexport const CRAYONS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/crayons.svg\";\nexport const DATA_FLOW_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/data-flow.svg\";\nexport const FENCE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/fence.svg\";\nexport const GRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/grill.svg\";\nexport const HAND_DRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hand-drill.svg\";\nexport const HAT_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hat.svg\";\nexport const INTERNET_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/internet.svg\";\nexport const LADYBUG_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/ladybug.svg\";\nexport const LEAVES_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/leaves.svg\";\nexport const MEDICINE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/medicine.svg\";\nexport const NEST_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/nest.svg\";\nexport const SHUTTLECOCK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/shuttlecock.svg\";\nexport const SPADE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/spade.svg\";\nexport const STATISTICS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/statistics.svg\";\nexport const SUN_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/sun.svg\";\nexport const TREE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/tree.svg\";\n\nexport const ALL_ICONS = [\n  {\n    url: BOOK_ICON,\n    name: \"Book\",\n  },\n  {\n    url: BALLOON_ICON,\n    name: \"Balloon\",\n  },\n  {\n    url: BIRD_ICON,\n    name: \"Bird\",\n  },\n  {\n    url: CALENDAR_ICON,\n    name: \"Calendar\",\n  },\n  {\n    url: CLOVER_ICON,\n    name: \"Clover\",\n  },\n  {\n    url: CRAYONS_ICON,\n    name: \"Crayons\",\n  },\n  {\n    url: DATA_FLOW_ICON,\n    name: \"Data\",\n  },\n  {\n    url: FENCE_ICON,\n    name: \"Fence\",\n  },\n  {\n    url: GRILL_ICON,\n    name: \"Grill\",\n  },\n  {\n    url: HAND_DRILL_ICON,\n    name: \"Hand\",\n  },\n  {\n    url: HAT_ICON,\n    name: \"Hat\",\n  },\n  {\n    url: INTERNET_ICON,\n    name: \"Internet\",\n  },\n  {\n    url: LADYBUG_ICON,\n    name: \"Ladybug\",\n  },\n  {\n    url: LEAVES_ICON,\n    name: \"Leaves\",\n  },\n  {\n    url: MEDICINE_ICON,\n    name: \"Medicine\",\n  },\n  {\n    url: NEST_ICON,\n    name: \"Nest\",\n  },\n  {\n    url: SHUTTLECOCK_ICON,\n    name: \"Shuttlecock\",\n  },\n  {\n    url: SPADE_ICON,\n    name: \"Spade\",\n  },\n  {\n    url: STATISTICS_ICON,\n    name: \"Statistics\",\n  },\n  {\n    url: SUN_ICON,\n    name: \"Sun\",\n  },\n  {\n    url: TREE_ICON,\n    name: \"Tree\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    // dispatch your add topic action here\n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Topics() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n\n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n      <ul className=\"topics-list\">\n        {Object.values(topics).map((topic) => (\n          <li className=\"topic\" key={topic.id}>\n          <Link to={ROUTES.topicRoute(topic.id)} className=\"topic-link\">\n           <div className=\"topic-container\">\n             <img src={topic.icon} alt=\"\" />\n             <div className=\"text-content\">\n               <h2>{topic.name}</h2>\n               <p>{topic.quizIds.length} Quizzes</p>\n             </div>\n           </div>\n         </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}\n","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Topic() {\n  const topics = {}; // replace this with a call to your selector to select all the topics in state\n  const quizzes = {}; // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" />\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nexport default function Card({ id }) {\n  const cards = {}; // replace this with a call to your selector to get all the cards in state\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n","import { Link, useParams } from \"react-router-dom\";\nimport Card from \"../cards/Card\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Topic() {\n  const quizzes = {}; // replace this with a call to your selector to get all the quizzes in state\n  let { quizId } = useParams();\n  const quiz = quizzes[quizId];\n\n  return (\n    <section>\n      <h1>{quiz.name}</h1>\n      <ul className=\"cards-list\">\n        {quiz.cardIds.map((id) => (\n          <Card key={id} id={id} />\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\n\nexport default function Quizzes() {\n  const quizzes = {}; // replace this with a call to your selector to get all the quizzes in state\n  return (\n    <section className=\"center\">\n      <h1>Quizzes</h1>\n      <ul className=\"quizzes-list\">\n        {Object.values(quizzes).map((quiz) => (\n          <Link key={quiz.id} to={ROUTES.quizRoute(quiz.id)}>\n            <li className=\"quiz\">{quiz.name}</li>\n          </Link>\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button\">\n        Create New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport NewQuizForm from \"../components/NewQuizForm\";\nimport NewTopicForm from \"../components/NewTopicForm\";\nimport Topics from \"../features/topics/Topics\";\nimport Topic from \"../features/topics/Topic\";\nimport Quiz from \"../features/quizzes/Quiz\";\nimport Quizzes from \"../features/quizzes/Quizzes\";\nimport ROUTES from \"./routes\";\n\nexport default function App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\n              Topics\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\n              Quizzes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\n              New Quiz\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/topics\">\n          <TopicsRoutes />\n        </Route>\n        <Route path=\"/quizzes\">\n          <QuizRoutes />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction TopicsRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewTopicForm />\n        </Route>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Topics />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction QuizRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewQuizForm />\n        </Route>\n        <Route path={`${match.path}/:quizId`}>\n          <Quiz />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Quizzes />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nexport default configureStore({\n  reducer: {},\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}